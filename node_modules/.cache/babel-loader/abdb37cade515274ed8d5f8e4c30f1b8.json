{"ast":null,"code":"import { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n\n  const {\n    defaultProps = {},\n    mixins = {},\n    overrides = {},\n    palette = {},\n    props = {},\n    styleOverrides = {},\n    ...other\n  } = inputTheme;\n  const theme = { ...other,\n    components: {}\n  }; // default props\n\n  Object.keys(defaultProps).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  }); // CSS overrides\n\n  Object.keys(styleOverrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  }); // theme.spacing\n\n  theme.spacing = createSpacing(inputTheme.spacing); // theme.mixins.gutters\n\n  const breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  const spacing = theme.spacing;\n  theme.mixins = {\n    gutters: function () {\n      let styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2),\n        ...styles,\n        [breakpoints.up('sm')]: {\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3),\n          ...styles[breakpoints.up('sm')]\n        }\n      };\n    },\n    ...mixins\n  };\n  const {\n    type: typeInput,\n    mode: modeInput,\n    ...paletteRest\n  } = palette;\n  const finalMode = modeInput || typeInput || 'light';\n  theme.palette = {\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode,\n    ...paletteRest\n  };\n  return theme;\n}","map":{"version":3,"names":["createBreakpoints","createSpacing","adaptV4Theme","inputTheme","process","env","NODE_ENV","console","warn","join","defaultProps","mixins","overrides","palette","props","styleOverrides","other","theme","components","Object","keys","forEach","component","componentValue","spacing","breakpoints","gutters","styles","paddingLeft","paddingRight","up","type","typeInput","mode","modeInput","paletteRest","finalMode","text","hint"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/styles/adaptV4Theme.js"],"sourcesContent":["import { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n  const {\n    defaultProps = {},\n    mixins = {},\n    overrides = {},\n    palette = {},\n    props = {},\n    styleOverrides = {},\n    ...other\n  } = inputTheme;\n  const theme = {\n    ...other,\n    components: {}\n  };\n\n  // default props\n  Object.keys(defaultProps).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  });\n\n  // CSS overrides\n  Object.keys(styleOverrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  });\n\n  // theme.spacing\n  theme.spacing = createSpacing(inputTheme.spacing);\n\n  // theme.mixins.gutters\n  const breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  const spacing = theme.spacing;\n  theme.mixins = {\n    gutters: (styles = {}) => {\n      return {\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2),\n        ...styles,\n        [breakpoints.up('sm')]: {\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3),\n          ...styles[breakpoints.up('sm')]\n        }\n      };\n    },\n    ...mixins\n  };\n  const {\n    type: typeInput,\n    mode: modeInput,\n    ...paletteRest\n  } = palette;\n  const finalMode = modeInput || typeInput || 'light';\n  theme.palette = {\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode,\n    ...paletteRest\n  };\n  return theme;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}