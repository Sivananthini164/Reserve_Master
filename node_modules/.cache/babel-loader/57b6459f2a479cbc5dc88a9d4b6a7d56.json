{"ast":null,"code":"// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\n\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  const constant = height / 36; // https://www.desmos.com/calculator/vbrp3ggqet\n\n  return Math.min(Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10), 3000);\n}\n\nexport default function createTransitions(inputTransitions) {\n  const mergedEasing = { ...easing,\n    ...inputTransitions.easing\n  };\n  const mergedDuration = { ...duration,\n    ...inputTransitions.duration\n  };\n\n  const create = function () {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      duration: durationOption = mergedDuration.standard,\n      easing: easingOption = mergedEasing.easeInOut,\n      delay = 0,\n      ...other\n    } = options;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const isString = value => typeof value === 'string';\n\n      const isNumber = value => !Number.isNaN(parseFloat(value));\n\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(`MUI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n      }\n\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n\n      if (typeof options !== 'object') {\n        console.error(['MUI: Secong argument of transition.create must be an object.', \"Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`\"].join('\\n'));\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n\n  return {\n    getAutoHeightDuration,\n    create,\n    ...inputTransitions,\n    easing: mergedEasing,\n    duration: mergedDuration\n  };\n}","map":{"version":3,"names":["easing","easeInOut","easeOut","easeIn","sharp","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","Math","round","getAutoHeightDuration","height","constant","min","createTransitions","inputTransitions","mergedEasing","mergedDuration","create","props","options","durationOption","easingOption","delay","other","process","env","NODE_ENV","isString","value","isNumber","Number","isNaN","parseFloat","Array","isArray","console","error","join","Object","keys","length","map","animatedProp"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/styles/createTransitions.js"],"sourcesContent":["// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n\n// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n  const constant = height / 36;\n\n  // https://www.desmos.com/calculator/vbrp3ggqet\n  return Math.min(Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10), 3000);\n}\nexport default function createTransitions(inputTransitions) {\n  const mergedEasing = {\n    ...easing,\n    ...inputTransitions.easing\n  };\n  const mergedDuration = {\n    ...duration,\n    ...inputTransitions.duration\n  };\n  const create = (props = ['all'], options = {}) => {\n    const {\n      duration: durationOption = mergedDuration.standard,\n      easing: easingOption = mergedEasing.easeInOut,\n      delay = 0,\n      ...other\n    } = options;\n    if (process.env.NODE_ENV !== 'production') {\n      const isString = value => typeof value === 'string';\n      const isNumber = value => !Number.isNaN(parseFloat(value));\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(`MUI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n      }\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n      if (typeof options !== 'object') {\n        console.error(['MUI: Secong argument of transition.create must be an object.', \"Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`\"].join('\\n'));\n      }\n      if (Object.keys(other).length !== 0) {\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n      }\n    }\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n  return {\n    getAutoHeightDuration,\n    create,\n    ...inputTransitions,\n    easing: mergedEasing,\n    duration: mergedDuration\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}