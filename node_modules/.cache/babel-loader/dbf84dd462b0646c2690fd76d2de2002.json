{"ast":null,"code":"import createPalette from \"./createPalette.js\";\nimport createThemeWithVars from \"./createThemeWithVars.js\";\nimport createThemeNoVars from \"./createThemeNoVars.js\";\nexport { createMuiTheme } from \"./createThemeNoVars.js\"; // eslint-disable-next-line consistent-return\n\nfunction attachColorScheme(theme, scheme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return undefined;\n  }\n\n  if (colorScheme) {\n    theme.colorSchemes[scheme] = { ...(colorScheme !== true && colorScheme),\n      palette: createPalette({ ...(colorScheme === true ? {} : colorScheme.palette),\n        mode: scheme\n      }) // cast type to skip module augmentation test\n\n    };\n  }\n}\n/**\n * Generate a theme base on the options received.\n * @param options Takes an incomplete theme object and adds the missing parts.\n * @param args Deep merge the arguments with the about to be returned theme.\n * @returns A complete, ready-to-use theme object.\n */\n\n\nexport default function createTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    palette,\n    cssVariables = false,\n    colorSchemes: initialColorSchemes = !palette ? {\n      light: true\n    } : undefined,\n    defaultColorScheme: initialDefaultColorScheme = palette?.mode,\n    ...rest\n  } = options;\n  const defaultColorSchemeInput = initialDefaultColorScheme || 'light';\n  const defaultScheme = initialColorSchemes?.[defaultColorSchemeInput];\n  const colorSchemesInput = { ...initialColorSchemes,\n    ...(palette ? {\n      [defaultColorSchemeInput]: { ...(typeof defaultScheme !== 'boolean' && defaultScheme),\n        palette\n      }\n    } : undefined)\n  };\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (cssVariables === false) {\n    if (!('colorSchemes' in options)) {\n      // Behaves exactly as v5\n      return createThemeNoVars(options, ...args);\n    }\n\n    let paletteOptions = palette;\n\n    if (!('palette' in options)) {\n      if (colorSchemesInput[defaultColorSchemeInput]) {\n        if (colorSchemesInput[defaultColorSchemeInput] !== true) {\n          paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;\n        } else if (defaultColorSchemeInput === 'dark') {\n          // @ts-ignore to prevent the module augmentation test from failing\n          paletteOptions = {\n            mode: 'dark'\n          };\n        }\n      }\n    }\n\n    const theme = createThemeNoVars({ ...options,\n      palette: paletteOptions\n    }, ...args);\n    theme.defaultColorScheme = defaultColorSchemeInput;\n    theme.colorSchemes = colorSchemesInput;\n\n    if (theme.palette.mode === 'light') {\n      theme.colorSchemes.light = { ...(colorSchemesInput.light !== true && colorSchemesInput.light),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'dark', colorSchemesInput.dark);\n    }\n\n    if (theme.palette.mode === 'dark') {\n      theme.colorSchemes.dark = { ...(colorSchemesInput.dark !== true && colorSchemesInput.dark),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'light', colorSchemesInput.light);\n    }\n\n    return theme;\n  }\n\n  if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') {\n    colorSchemesInput.light = true;\n  }\n\n  return createThemeWithVars({ ...rest,\n    colorSchemes: colorSchemesInput,\n    defaultColorScheme: defaultColorSchemeInput,\n    ...(typeof cssVariables !== 'boolean' && cssVariables)\n  }, ...args);\n}","map":{"version":3,"names":["createPalette","createThemeWithVars","createThemeNoVars","createMuiTheme","attachColorScheme","theme","scheme","colorScheme","colorSchemes","undefined","palette","mode","createTheme","options","cssVariables","initialColorSchemes","light","defaultColorScheme","initialDefaultColorScheme","rest","defaultColorSchemeInput","defaultScheme","colorSchemesInput","args","paletteOptions","dark"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/styles/createTheme.js"],"sourcesContent":["import createPalette from \"./createPalette.js\";\nimport createThemeWithVars from \"./createThemeWithVars.js\";\nimport createThemeNoVars from \"./createThemeNoVars.js\";\nexport { createMuiTheme } from \"./createThemeNoVars.js\";\n// eslint-disable-next-line consistent-return\nfunction attachColorScheme(theme, scheme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return undefined;\n  }\n  if (colorScheme) {\n    theme.colorSchemes[scheme] = {\n      ...(colorScheme !== true && colorScheme),\n      palette: createPalette({\n        ...(colorScheme === true ? {} : colorScheme.palette),\n        mode: scheme\n      }) // cast type to skip module augmentation test\n    };\n  }\n}\n\n/**\n * Generate a theme base on the options received.\n * @param options Takes an incomplete theme object and adds the missing parts.\n * @param args Deep merge the arguments with the about to be returned theme.\n * @returns A complete, ready-to-use theme object.\n */\nexport default function createTheme(options = {},\n// cast type to skip module augmentation test\n...args) {\n  const {\n    palette,\n    cssVariables = false,\n    colorSchemes: initialColorSchemes = !palette ? {\n      light: true\n    } : undefined,\n    defaultColorScheme: initialDefaultColorScheme = palette?.mode,\n    ...rest\n  } = options;\n  const defaultColorSchemeInput = initialDefaultColorScheme || 'light';\n  const defaultScheme = initialColorSchemes?.[defaultColorSchemeInput];\n  const colorSchemesInput = {\n    ...initialColorSchemes,\n    ...(palette ? {\n      [defaultColorSchemeInput]: {\n        ...(typeof defaultScheme !== 'boolean' && defaultScheme),\n        palette\n      }\n    } : undefined)\n  };\n  if (cssVariables === false) {\n    if (!('colorSchemes' in options)) {\n      // Behaves exactly as v5\n      return createThemeNoVars(options, ...args);\n    }\n    let paletteOptions = palette;\n    if (!('palette' in options)) {\n      if (colorSchemesInput[defaultColorSchemeInput]) {\n        if (colorSchemesInput[defaultColorSchemeInput] !== true) {\n          paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;\n        } else if (defaultColorSchemeInput === 'dark') {\n          // @ts-ignore to prevent the module augmentation test from failing\n          paletteOptions = {\n            mode: 'dark'\n          };\n        }\n      }\n    }\n    const theme = createThemeNoVars({\n      ...options,\n      palette: paletteOptions\n    }, ...args);\n    theme.defaultColorScheme = defaultColorSchemeInput;\n    theme.colorSchemes = colorSchemesInput;\n    if (theme.palette.mode === 'light') {\n      theme.colorSchemes.light = {\n        ...(colorSchemesInput.light !== true && colorSchemesInput.light),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'dark', colorSchemesInput.dark);\n    }\n    if (theme.palette.mode === 'dark') {\n      theme.colorSchemes.dark = {\n        ...(colorSchemesInput.dark !== true && colorSchemesInput.dark),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'light', colorSchemesInput.light);\n    }\n    return theme;\n  }\n  if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') {\n    colorSchemesInput.light = true;\n  }\n  return createThemeWithVars({\n    ...rest,\n    colorSchemes: colorSchemesInput,\n    defaultColorScheme: defaultColorSchemeInput,\n    ...(typeof cssVariables !== 'boolean' && cssVariables)\n  }, ...args);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}