{"ast":null,"code":"import { isPlainObject } from '@mui/utils/deepmerge';\nimport defaultSxConfig from \"./defaultSxConfig.js\";\n\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = props?.theme?.unstable_sxConfig ?? defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx,\n    ...other\n  } = props;\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = function () {\n      const result = inSx(...arguments);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return { ...systemProps,\n        ...result\n      };\n    };\n  } else {\n    finalSx = { ...systemProps,\n      ...inSx\n    };\n  }\n\n  return { ...otherProps,\n    sx: finalSx\n  };\n}","map":{"version":3,"names":["isPlainObject","defaultSxConfig","splitProps","props","result","systemProps","otherProps","config","theme","unstable_sxConfig","Object","keys","forEach","prop","extendSxProp","sx","inSx","other","finalSx","Array","isArray"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import { isPlainObject } from '@mui/utils/deepmerge';\nimport defaultSxConfig from \"./defaultSxConfig.js\";\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = props?.theme?.unstable_sxConfig ?? defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx,\n    ...other\n  } = props;\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return {\n        ...systemProps,\n        ...result\n      };\n    };\n  } else {\n    finalSx = {\n      ...systemProps,\n      ...inSx\n    };\n  }\n  return {\n    ...otherProps,\n    sx: finalSx\n  };\n}"],"mappings":"AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAC1B,MAAMC,MAAM,GAAG;IACbC,WAAW,EAAE,EADA;IAEbC,UAAU,EAAE;EAFC,CAAf;EAIA,MAAMC,MAAM,GAAGJ,KAAK,EAAEK,KAAP,EAAcC,iBAAd,IAAmCR,eAAlD;EACAS,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,OAAnB,CAA2BC,IAAI,IAAI;IACjC,IAAIN,MAAM,CAACM,IAAD,CAAV,EAAkB;MAChBT,MAAM,CAACC,WAAP,CAAmBQ,IAAnB,IAA2BV,KAAK,CAACU,IAAD,CAAhC;IACD,CAFD,MAEO;MACLT,MAAM,CAACE,UAAP,CAAkBO,IAAlB,IAA0BV,KAAK,CAACU,IAAD,CAA/B;IACD;EACF,CAND;EAOA,OAAOT,MAAP;AACD,CAdD;;AAeA,eAAe,SAASU,YAAT,CAAsBX,KAAtB,EAA6B;EAC1C,MAAM;IACJY,EAAE,EAAEC,IADA;IAEJ,GAAGC;EAFC,IAGFd,KAHJ;EAIA,MAAM;IACJE,WADI;IAEJC;EAFI,IAGFJ,UAAU,CAACe,KAAD,CAHd;EAIA,IAAIC,OAAJ;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;IACvBE,OAAO,GAAG,CAACb,WAAD,EAAc,GAAGW,IAAjB,CAAV;EACD,CAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;IACrCE,OAAO,GAAG,YAAa;MACrB,MAAMd,MAAM,GAAGY,IAAI,CAAC,YAAD,CAAnB;;MACA,IAAI,CAAChB,aAAa,CAACI,MAAD,CAAlB,EAA4B;QAC1B,OAAOC,WAAP;MACD;;MACD,OAAO,EACL,GAAGA,WADE;QAEL,GAAGD;MAFE,CAAP;IAID,CATD;EAUD,CAXM,MAWA;IACLc,OAAO,GAAG,EACR,GAAGb,WADK;MAER,GAAGW;IAFK,CAAV;EAID;;EACD,OAAO,EACL,GAAGV,UADE;IAELS,EAAE,EAAEG;EAFC,CAAP;AAID"},"metadata":{},"sourceType":"module"}