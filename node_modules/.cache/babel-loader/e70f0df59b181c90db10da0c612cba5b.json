{"ast":null,"code":"import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\n\nconst getTextDecoration = _ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","map":{"version":3,"names":["getPath","alpha","getTextDecoration","theme","ownerState","transformedColor","color","channelColor"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/Link/getTextDecoration.js"],"sourcesContent":["import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;"],"mappings":"AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;;AACA,MAAMC,iBAAiB,GAAG,QAGpB;EAAA,IAHqB;IACzBC,KADyB;IAEzBC;EAFyB,CAGrB;EACJ,MAAMC,gBAAgB,GAAGD,UAAU,CAACE,KAApC;EACA,MAAMA,KAAK,GAAGN,OAAO,CAACG,KAAD,EAAS,WAAUE,gBAAiB,EAApC,EAAuC,KAAvC,CAAP,IAAwDD,UAAU,CAACE,KAAjF;EACA,MAAMC,YAAY,GAAGP,OAAO,CAACG,KAAD,EAAS,WAAUE,gBAAiB,SAApC,CAA5B;;EACA,IAAI,UAAUF,KAAV,IAAmBI,YAAvB,EAAqC;IACnC,OAAQ,QAAOA,YAAa,SAA5B;EACD;;EACD,OAAON,KAAK,CAACK,KAAD,EAAQ,GAAR,CAAZ;AACD,CAXD;;AAYA,eAAeJ,iBAAf"},"metadata":{},"sourceType":"module"}