{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport debounce from \"../utils/debounce.js\";\nimport animate from \"../internal/animate.js\";\nimport ScrollbarSize from \"./ScrollbarSize.js\";\nimport TabScrollButton from \"../TabScrollButton/index.js\";\nimport useEventCallback from \"../utils/useEventCallback.js\";\nimport tabsClasses, { getTabsUtilityClass } from \"./tabsClasses.js\";\nimport ownerDocument from \"../utils/ownerDocument.js\";\nimport ownerWindow from \"../utils/ownerWindow.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return list.firstChild;\n};\n\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return list.lastChild;\n};\n\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\n\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    overflow: 'hidden',\n    minHeight: 48,\n    // Add iOS momentum scrolling for iOS < 13.0\n    WebkitOverflowScrolling: 'touch',\n    display: 'flex',\n    variants: [{\n      props: _ref2 => {\n        let {\n          ownerState\n        } = _ref2;\n        return ownerState.vertical;\n      },\n      style: {\n        flexDirection: 'column'\n      }\n    }, {\n      props: _ref3 => {\n        let {\n          ownerState\n        } = _ref3;\n        return ownerState.scrollButtonsHideMobile;\n      },\n      style: {\n        [`& .${tabsClasses.scrollButtons}`]: {\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          }\n        }\n      }\n    }]\n  };\n}));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: _ref4 => {\n      let {\n        ownerState\n      } = _ref4;\n      return ownerState.fixed;\n    },\n    style: {\n      overflowX: 'hidden',\n      width: '100%'\n    }\n  }, {\n    props: _ref5 => {\n      let {\n        ownerState\n      } = _ref5;\n      return ownerState.hideScrollbar;\n    },\n    style: {\n      // Hide dimensionless scrollbar on macOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    }\n  }, {\n    props: _ref6 => {\n      let {\n        ownerState\n      } = _ref6;\n      return ownerState.scrollableX;\n    },\n    style: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    }\n  }, {\n    props: _ref7 => {\n      let {\n        ownerState\n      } = _ref7;\n      return ownerState.scrollableY;\n    },\n    style: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    }\n  }]\n});\nconst FlexContainer = styled('div', {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})({\n  display: 'flex',\n  variants: [{\n    props: _ref8 => {\n      let {\n        ownerState\n      } = _ref8;\n      return ownerState.vertical;\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: _ref9 => {\n      let {\n        ownerState\n      } = _ref9;\n      return ownerState.centered;\n    },\n    style: {\n      justifyContent: 'center'\n    }\n  }]\n});\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(memoTheme(_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return {\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create(),\n    variants: [{\n      props: {\n        indicatorColor: 'primary'\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette.primary.main\n      }\n    }, {\n      props: {\n        indicatorColor: 'secondary'\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette.secondary.main\n      }\n    }, {\n      props: _ref11 => {\n        let {\n          ownerState\n        } = _ref11;\n        return ownerState.vertical;\n      },\n      style: {\n        height: '100%',\n        width: 2,\n        right: 0\n      }\n    }]\n  };\n}));\nconst TabsScrollbarSize = styled(ScrollbarSize)({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n});\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    slots = {},\n    slotProps = {},\n    TabIndicatorProps = {},\n    TabScrollButtonProps = {},\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false,\n    ...other\n  } = props;\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = { ...props,\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  };\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 && // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n\n    if (vertical) {\n      startIndicator = 'top';\n\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n\n      if (tabMeta && tabsMeta) {\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + tabsMeta.scrollLeft);\n      }\n    }\n\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n\n    if (typeof indicatorStyle[startIndicator] !== 'number' || typeof indicatorStyle[size] !== 'number') {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = function (scrollValue) {\n    let {\n      animation = true\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, {\n      slots: {\n        StartScrollButtonIcon: slots.StartScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll,\n      ...TabScrollButtonProps,\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, {\n      slots: {\n        EndScrollButtonIcon: slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        endScrollButtonIcon: endScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll,\n      ...TabScrollButtonProps,\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    }) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    let resizeObserver;\n    /**\n     * @type {MutationCallback}\n     */\n\n    const handleMutation = records => {\n      records.forEach(record => {\n        record.removedNodes.forEach(item => {\n          resizeObserver?.unobserve(item);\n        });\n        record.addedNodes.forEach(item => {\n          resizeObserver?.observe(item);\n        });\n      });\n      handleResize();\n      updateScrollButtonState();\n    };\n\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let mutationObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n\n    if (typeof MutationObserver !== 'undefined') {\n      mutationObserver = new MutationObserver(handleMutation);\n      mutationObserver.observe(tabListRef.current, {\n        childList: true\n      });\n    }\n\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      mutationObserver?.disconnect();\n      resizeObserver?.disconnect();\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp?.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, { ...TabIndicatorProps,\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    ownerState: ownerState,\n    style: { ...indicatorStyle,\n      ...TabIndicatorProps.style\n    }\n  });\n\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue,\n      ...(childIndex === 1 && value === false && !child.props.tabIndex ? {\n        tabIndex: 0\n      } : {})\n    });\n  });\n\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = currentFocus.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    as: component,\n    ...other,\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      ownerState: ownerState,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        ownerState: ownerState,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  - `fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;","map":{"version":3,"names":["React","isFragment","PropTypes","clsx","refType","composeClasses","useRtl","useSlotProps","styled","useTheme","memoTheme","useDefaultProps","debounce","animate","ScrollbarSize","TabScrollButton","useEventCallback","tabsClasses","getTabsUtilityClass","ownerDocument","ownerWindow","jsx","_jsx","jsxs","_jsxs","nextItem","list","item","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","useUtilityClasses","ownerState","vertical","fixed","hideScrollbar","scrollableX","scrollableY","centered","scrollButtonsHideMobile","classes","slots","root","scroller","flexContainer","indicator","scrollButtons","TabsRoot","name","slot","overridesResolver","props","styles","theme","overflow","minHeight","WebkitOverflowScrolling","display","variants","style","flexDirection","breakpoints","down","TabsScroller","position","flex","whiteSpace","overflowX","width","scrollbarWidth","overflowY","FlexContainer","flexContainerVertical","justifyContent","TabsIndicator","height","bottom","transition","transitions","create","indicatorColor","backgroundColor","vars","palette","primary","main","secondary","right","TabsScrollbarSize","defaultIndicatorStyle","warnedOnceTabPresent","Tabs","forwardRef","inProps","ref","isRtl","ariaLabel","ariaLabelledBy","action","children","childrenProp","className","component","allowScrollButtonsMobile","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","slotProps","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","other","scrollable","scrollStart","start","end","clientSize","size","startScrollButtonIconProps","elementType","StartScrollButtonIcon","externalSlotProps","startScrollButtonIcon","endScrollButtonIconProps","EndScrollButtonIcon","endScrollButtonIcon","process","env","NODE_ENV","console","error","mounted","setMounted","useState","indicatorStyle","setIndicatorStyle","displayStartScroll","setDisplayStartScroll","displayEndScroll","setDisplayEndScroll","updateScrollObserver","setUpdateScrollObserver","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollWidth","top","left","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","startIndicator","newIndicatorStyle","dStart","Math","abs","dSize","scroll","scrollValue","animation","duration","standard","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","getConditionalElements","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","direction","onClick","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","useEffect","handleResize","resizeObserver","handleMutation","records","forEach","record","removedNodes","unobserve","addedNodes","observe","win","addEventListener","mutationObserver","ResizeObserver","child","MutationObserver","childList","clear","removeEventListener","disconnect","tabListChildren","IntersectionObserver","firstTab","lastTab","observerOptions","threshold","handleScrollButtonStart","entries","isIntersecting","firstObserver","handleScrollButtonEnd","lastObserver","undefined","useImperativeHandle","updateIndicator","updateScrollButtons","childIndex","Children","map","isValidElement","childValue","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","activeElement","role","previousItemKey","nextItemKey","key","preventDefault","as","onKeyDown","propTypes","bool","string","node","object","oneOfType","oneOf","func","shape","sx","arrayOf","any"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/Tabs/Tabs.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport debounce from \"../utils/debounce.js\";\nimport animate from \"../internal/animate.js\";\nimport ScrollbarSize from \"./ScrollbarSize.js\";\nimport TabScrollButton from \"../TabScrollButton/index.js\";\nimport useEventCallback from \"../utils/useEventCallback.js\";\nimport tabsClasses, { getTabsUtilityClass } from \"./tabsClasses.js\";\nimport ownerDocument from \"../utils/ownerDocument.js\";\nimport ownerWindow from \"../utils/ownerWindow.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return list.firstChild;\n};\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return list.lastChild;\n};\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n      wrappedOnce = true;\n    }\n\n    // Same logic as useAutocomplete.js\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  minHeight: 48,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  display: 'flex',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollButtonsHideMobile,\n    style: {\n      [`& .${tabsClasses.scrollButtons}`]: {\n        [theme.breakpoints.down('sm')]: {\n          display: 'none'\n        }\n      }\n    }\n  }]\n})));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.fixed,\n    style: {\n      overflowX: 'hidden',\n      width: '100%'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.hideScrollbar,\n    style: {\n      // Hide dimensionless scrollbar on macOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollableX,\n    style: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollableY,\n    style: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    }\n  }]\n});\nconst FlexContainer = styled('div', {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})({\n  display: 'flex',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.centered,\n    style: {\n      justifyContent: 'center'\n    }\n  }]\n});\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create(),\n  variants: [{\n    props: {\n      indicatorColor: 'primary'\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette.primary.main\n    }\n  }, {\n    props: {\n      indicatorColor: 'secondary'\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette.secondary.main\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      height: '100%',\n      width: 2,\n      right: 0\n    }\n  }]\n})));\nconst TabsScrollbarSize = styled(ScrollbarSize)({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n});\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    slots = {},\n    slotProps = {},\n    TabIndicatorProps = {},\n    TabScrollButtonProps = {},\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false,\n    ...other\n  } = props;\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = {\n    ...props,\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  };\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect();\n      // create a new object with ClientRect class props + scrollLeft\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n    let tabMeta;\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 &&\n          // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n    if (vertical) {\n      startIndicator = 'top';\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n      if (tabMeta && tabsMeta) {\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + tabsMeta.scrollLeft);\n      }\n    }\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n    if (typeof indicatorStyle[startIndicator] !== 'number' || typeof indicatorStyle[size] !== 'number') {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n    }\n    scroll(scrollValue);\n  };\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n        break;\n      }\n      totalSize += tab[clientSize];\n    }\n    return totalSize;\n  };\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  };\n\n  // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, {\n      slots: {\n        StartScrollButtonIcon: slots.StartScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll,\n      ...TabScrollButtonProps,\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, {\n      slots: {\n        EndScrollButtonIcon: slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        endScrollButtonIcon: endScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll,\n      ...TabScrollButtonProps,\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    }) : null;\n    return conditionalElements;\n  };\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    let resizeObserver;\n\n    /**\n     * @type {MutationCallback}\n     */\n    const handleMutation = records => {\n      records.forEach(record => {\n        record.removedNodes.forEach(item => {\n          resizeObserver?.unobserve(item);\n        });\n        record.addedNodes.forEach(item => {\n          resizeObserver?.observe(item);\n        });\n      });\n      handleResize();\n      updateScrollButtonState();\n    };\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let mutationObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n    if (typeof MutationObserver !== 'undefined') {\n      mutationObserver = new MutationObserver(handleMutation);\n      mutationObserver.observe(tabListRef.current, {\n        childList: true\n      });\n    }\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      mutationObserver?.disconnect();\n      resizeObserver?.disconnect();\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp?.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, {\n    ...TabIndicatorProps,\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    ownerState: ownerState,\n    style: {\n      ...indicatorStyle,\n      ...TabIndicatorProps.style\n    }\n  });\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue,\n      ...(childIndex === 1 && value === false && !child.props.tabIndex ? {\n        tabIndex: 0\n      } : {})\n    });\n  });\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement;\n    // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n    const role = currentFocus.getAttribute('role');\n    if (role !== 'tab') {\n      return;\n    }\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n      default:\n        break;\n    }\n  };\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    as: component,\n    ...other,\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      ownerState: ownerState,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        ownerState: ownerState,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes /* @typescript-to-proptypes-ignore */.oneOf(['auto', false, true]),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n  /**\n   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  - `fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;"],"mappings":"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"},"metadata":{},"sourceType":"module"}