{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport { isPlainObject } from '@mui/utils/deepmerge';\n\nfunction isSerializable(val) {\n  return isPlainObject(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\n}\n/**\n * `baseTheme` usually comes from `createTheme` or `extendTheme`.\n *\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\n * For example, in a Next.js project:\n *\n * ```js\n * // next.config.js\n * const { extendTheme } = require('@mui/material/styles');\n *\n * const theme = extendTheme();\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\n * theme.toRuntimeSource = stringifyTheme;\n *\n * module.exports = withPigment({\n *  theme,\n * });\n * ```\n */\n\n\nexport function stringifyTheme() {\n  let baseTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const serializableTheme = { ...baseTheme\n  };\n\n  function serializeTheme(object) {\n    const array = Object.entries(object); // eslint-disable-next-line no-plusplus\n\n    for (let index = 0; index < array.length; index++) {\n      const [key, value] = array[index];\n\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\n        delete object[key];\n      } else if (isPlainObject(value)) {\n        object[key] = { ...value\n        };\n        serializeTheme(object[key]);\n      }\n    }\n  }\n\n  serializeTheme(serializableTheme);\n  return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\n\nconst theme = ${JSON.stringify(serializableTheme, null, 2)};\n\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\ntheme.transitions = createTransitions(theme.transitions || {});\n\nexport default theme;`;\n}","map":{"version":3,"names":["isPlainObject","isSerializable","val","Array","isArray","stringifyTheme","baseTheme","serializableTheme","serializeTheme","object","array","Object","entries","index","length","key","value","startsWith","JSON","stringify"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/styles/stringifyTheme.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { isPlainObject } from '@mui/utils/deepmerge';\nfunction isSerializable(val) {\n  return isPlainObject(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\n}\n\n/**\n * `baseTheme` usually comes from `createTheme` or `extendTheme`.\n *\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\n * For example, in a Next.js project:\n *\n * ```js\n * // next.config.js\n * const { extendTheme } = require('@mui/material/styles');\n *\n * const theme = extendTheme();\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\n * theme.toRuntimeSource = stringifyTheme;\n *\n * module.exports = withPigment({\n *  theme,\n * });\n * ```\n */\nexport function stringifyTheme(baseTheme = {}) {\n  const serializableTheme = {\n    ...baseTheme\n  };\n  function serializeTheme(object) {\n    const array = Object.entries(object);\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < array.length; index++) {\n      const [key, value] = array[index];\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\n        delete object[key];\n      } else if (isPlainObject(value)) {\n        object[key] = {\n          ...value\n        };\n        serializeTheme(object[key]);\n      }\n    }\n  }\n  serializeTheme(serializableTheme);\n  return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\n\nconst theme = ${JSON.stringify(serializableTheme, null, 2)};\n\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\ntheme.transitions = createTransitions(theme.transitions || {});\n\nexport default theme;`;\n}"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,sBAA9B;;AACA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EAC3B,OAAOF,aAAa,CAACE,GAAD,CAAb,IAAsB,OAAOA,GAAP,KAAe,WAArC,IAAoD,OAAOA,GAAP,KAAe,QAAnE,IAA+E,OAAOA,GAAP,KAAe,SAA9F,IAA2G,OAAOA,GAAP,KAAe,QAA1H,IAAsIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAA7I;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASG,cAAT,GAAwC;EAAA,IAAhBC,SAAgB,uEAAJ,EAAI;EAC7C,MAAMC,iBAAiB,GAAG,EACxB,GAAGD;EADqB,CAA1B;;EAGA,SAASE,cAAT,CAAwBC,MAAxB,EAAgC;IAC9B,MAAMC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeH,MAAf,CAAd,CAD8B,CAE9B;;IACA,KAAK,IAAII,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,KAAK,CAACI,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;MACjD,MAAM,CAACE,GAAD,EAAMC,KAAN,IAAeN,KAAK,CAACG,KAAD,CAA1B;;MACA,IAAI,CAACZ,cAAc,CAACe,KAAD,CAAf,IAA0BD,GAAG,CAACE,UAAJ,CAAe,WAAf,CAA9B,EAA2D;QACzD,OAAOR,MAAM,CAACM,GAAD,CAAb;MACD,CAFD,MAEO,IAAIf,aAAa,CAACgB,KAAD,CAAjB,EAA0B;QAC/BP,MAAM,CAACM,GAAD,CAAN,GAAc,EACZ,GAAGC;QADS,CAAd;QAGAR,cAAc,CAACC,MAAM,CAACM,GAAD,CAAP,CAAd;MACD;IACF;EACF;;EACDP,cAAc,CAACD,iBAAD,CAAd;EACA,OAAQ;AACV;AACA,gBAAgBW,IAAI,CAACC,SAAL,CAAeZ,iBAAf,EAAkC,IAAlC,EAAwC,CAAxC,CAA2C;AAC3D;AACA;AACA;AACA;AACA,sBAPE;AAQD"},"metadata":{},"sourceType":"module"}