{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FocusTrap from \"../Unstable_TrapFocus/index.js\";\nimport Portal from \"../Portal/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Backdrop from \"../Backdrop/index.js\";\nimport useModal from \"./useModal.js\";\nimport { getModalUtilityClass } from \"./modalClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { useForkRef } from \"../utils/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    position: 'fixed',\n    zIndex: (theme.vars || theme).zIndex.modal,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    variants: [{\n      props: _ref2 => {\n        let {\n          ownerState\n        } = _ref2;\n        return !ownerState.open && ownerState.exited;\n      },\n      style: {\n        visibility: 'hidden'\n      }\n    }]\n  };\n}));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  const props = useDefaultProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n  const {\n    BackdropComponent = ModalBackdrop,\n    BackdropProps,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    children,\n    container,\n    component,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    onBackdropClick,\n    onClose,\n    onTransitionEnter,\n    onTransitionExited,\n    open,\n    slotProps = {},\n    slots = {},\n    // eslint-disable-next-line react/prop-types\n    theme,\n    ...other\n  } = props;\n  const propsWithDefaults = { ...props,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal({ ...propsWithDefaults,\n    rootRef: ref\n  });\n  const ownerState = { ...propsWithDefaults,\n    exited\n  };\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n\n  const externalForwardedProps = { ...other,\n    slots: {\n      root: components.Root,\n      backdrop: components.Backdrop,\n      ...slots\n    },\n    slotProps: { ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: ModalRoot,\n    externalForwardedProps,\n    getSlotProps: getRootProps,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(className, classes?.root, !ownerState.open && ownerState.exited && classes?.hidden)\n  });\n  const [BackdropSlot, backdropProps] = useSlot('backdrop', {\n    elementType: BackdropComponent,\n    externalForwardedProps,\n    additionalProps: BackdropProps,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps({ ...otherHandlers,\n        onClick: event => {\n          if (onBackdropClick) {\n            onBackdropClick(event);\n          }\n\n          if (otherHandlers?.onClick) {\n            otherHandlers.onClick(event);\n          }\n        }\n      });\n    },\n    className: clsx(BackdropProps?.className, classes?.backdrop),\n    ownerState\n  });\n  const backdropRef = useForkRef(BackdropProps?.ref, backdropProps.ref);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, { ...rootProps,\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, { ...backdropProps,\n        ref: backdropRef\n      }) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;","map":{"version":3,"names":["React","PropTypes","clsx","HTMLElementType","elementAcceptingRef","composeClasses","FocusTrap","Portal","styled","memoTheme","useDefaultProps","Backdrop","useModal","getModalUtilityClass","useSlot","useForkRef","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","backdrop","ModalRoot","name","slot","overridesResolver","props","styles","hidden","theme","position","zIndex","vars","modal","right","bottom","top","left","variants","style","visibility","ModalBackdrop","Modal","forwardRef","inProps","ref","BackdropComponent","BackdropProps","classesProp","className","closeAfterTransition","children","container","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","onClose","onTransitionEnter","onTransitionExited","slotProps","other","propsWithDefaults","getRootProps","getBackdropProps","getTransitionProps","portalRef","isTopModal","hasTransition","rootRef","childProps","tabIndex","undefined","onEnter","onExited","externalForwardedProps","Root","RootSlot","rootProps","elementType","getSlotProps","additionalProps","as","BackdropSlot","backdropProps","otherHandlers","onClick","event","backdropRef","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","object","isRequired","string","bool","shape","oneOfType","func","sx","arrayOf"],"sources":["C:/Users/DELL/Documents/Reserve-Master/node_modules/@mui/material/Modal/Modal.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FocusTrap from \"../Unstable_TrapFocus/index.js\";\nimport Portal from \"../Portal/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Backdrop from \"../Backdrop/index.js\";\nimport useModal from \"./useModal.js\";\nimport { getModalUtilityClass } from \"./modalClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { useForkRef } from \"../utils/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'fixed',\n  zIndex: (theme.vars || theme).zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.open && ownerState.exited,\n    style: {\n      visibility: 'hidden'\n    }\n  }]\n})));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  const props = useDefaultProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n  const {\n    BackdropComponent = ModalBackdrop,\n    BackdropProps,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    children,\n    container,\n    component,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    onBackdropClick,\n    onClose,\n    onTransitionEnter,\n    onTransitionExited,\n    open,\n    slotProps = {},\n    slots = {},\n    // eslint-disable-next-line react/prop-types\n    theme,\n    ...other\n  } = props;\n  const propsWithDefaults = {\n    ...props,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal({\n    ...propsWithDefaults,\n    rootRef: ref\n  });\n  const ownerState = {\n    ...propsWithDefaults,\n    exited\n  };\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n  const externalForwardedProps = {\n    ...other,\n    slots: {\n      root: components.Root,\n      backdrop: components.Backdrop,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: ModalRoot,\n    externalForwardedProps,\n    getSlotProps: getRootProps,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(className, classes?.root, !ownerState.open && ownerState.exited && classes?.hidden)\n  });\n  const [BackdropSlot, backdropProps] = useSlot('backdrop', {\n    elementType: BackdropComponent,\n    externalForwardedProps,\n    additionalProps: BackdropProps,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps({\n        ...otherHandlers,\n        onClick: event => {\n          if (onBackdropClick) {\n            onBackdropClick(event);\n          }\n          if (otherHandlers?.onClick) {\n            otherHandlers.onClick(event);\n          }\n        }\n      });\n    },\n    className: clsx(BackdropProps?.className, classes?.backdrop),\n    ownerState\n  });\n  const backdropRef = useForkRef(BackdropProps?.ref, backdropProps.ref);\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, {\n      ...rootProps,\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, {\n        ...backdropProps,\n        ref: backdropRef\n      }) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}