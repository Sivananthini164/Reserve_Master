{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Reserve-Master\\\\src\\\\components\\\\booking\\\\Booking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl, Box, Typography, Container, Modal, Autocomplete, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport CheckCircle from '@mui/icons-material/CheckCircle';\nimport Close from '@mui/icons-material/Close';\nimport modulesData from './modules.json';\nimport { useHistory } from 'react-router-dom'; // Use useHistory\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Booking = () => {\n  _s();\n\n  const history = useHistory(); // Initialize useHistory\n\n  const [lectureName, setLectureName] = useState('');\n  const [department, setDepartment] = useState('');\n  const [module, setModule] = useState(null);\n  const [year, setYear] = useState('');\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [room, setRoom] = useState('');\n  const [equipment, setEquipment] = useState('');\n  const [sessionType, setSessionType] = useState('lecture');\n  const [openLoadingModal, setOpenLoadingModal] = useState(false);\n  const [openResultModal, setOpenResultModal] = useState(false);\n  const [resultMessage, setResultMessage] = useState('');\n  const [modules, setModules] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [roomFacilities, setRoomFacilities] = useState({}); // State for room facilities\n\n  useEffect(() => {\n    const fetchLecturerName = async () => {\n      const email = localStorage.getItem('userEmail');\n\n      if (email) {\n        try {\n          const response = await fetch('http://localhost:5000/Lectures');\n          const lecturers = await response.json();\n          const lecturer = lecturers.find(lecturer => lecturer.email === email);\n\n          if (lecturer) {\n            setLectureName(lecturer.name);\n            setDepartment(lecturer.department || '');\n          }\n        } catch (error) {\n          console.error('Error fetching lecturers:', error);\n        }\n      }\n    };\n\n    fetchLecturerName();\n  }, []);\n  useEffect(() => {\n    if (department) {\n      setModules(modulesData[department] || []);\n      setModule(null);\n      setYear('');\n      const roomData = modulesData[\"Lecture Halls\"].map(entry => Object.values(entry)[0]);\n      setRooms(roomData);\n    }\n  }, [department]);\n\n  const handleModuleChange = (event, newValue) => {\n    setModule(newValue);\n\n    if (newValue) {\n      setYear(newValue.year);\n    } else {\n      setYear('');\n    }\n  };\n\n  const handleTodayClick = () => {\n    const today = new Date().toISOString().split('T')[0];\n    setDate(today);\n  };\n\n  const handleRoomChange = (event, newValue) => {\n    setRoom(newValue);\n\n    if (newValue) {\n      const selectedRoom = modulesData[\"Lecture Halls\"].find(entry => entry.hallNo === newValue);\n\n      if (selectedRoom) {\n        setRoomFacilities(selectedRoom.facilities); // Set facilities based on selected room\n      }\n    } else {\n      setRoomFacilities({}); // Reset if no room is selected\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!lectureName || !department || !module || !year || !date || !startTime || !endTime || sessionType === 'lecture' && !room || sessionType === 'lab' && !equipment) {\n      alert(\"Please fill out all required fields.\");\n      return;\n    }\n\n    const bookedEmail = localStorage.getItem('userEmail');\n    setOpenLoadingModal(true);\n    setTimeout(async () => {\n      try {\n        const response = await fetch('http://localhost:5000/Booking');\n        const bookings = await response.json();\n        const conflictingBooking = bookings.find(booking => booking.location === room && booking.date === date && (startTime >= booking.startTime && startTime < booking.endTime || endTime > booking.startTime && endTime <= booking.endTime));\n\n        if (conflictingBooking) {\n          setResultMessage(`Sorry! This hall is already booked for this time until ${conflictingBooking.endTime}.`);\n        } else {\n          const newBooking = {\n            id: Math.random().toString(36).substr(2, 9),\n            lectureName,\n            department,\n            module: `${module.code} ${module.title}`,\n            // Save full module name\n            year,\n            date,\n            startTime,\n            endTime,\n            \"Type of booking\": sessionType,\n            location: sessionType === 'lecture' ? room : equipment,\n            bookedEmail\n          };\n          const saveResponse = await fetch('http://localhost:5000/Booking', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newBooking)\n          });\n\n          if (saveResponse.ok) {\n            setResultMessage(\"This hall is booked successfully.\");\n          } else {\n            setResultMessage('Failed to save booking. Please try again.');\n          }\n        }\n      } catch (error) {\n        console.error('Error submitting booking:', error);\n        setResultMessage('An error occurred while submitting the booking. Please try again.');\n      } finally {\n        setOpenLoadingModal(false);\n        setOpenResultModal(true);\n      }\n    }, 3000);\n  };\n\n  const handleCloseResultModal = () => {\n    setOpenResultModal(false);\n\n    if (resultMessage.includes(\"successfully\")) {// Optionally navigate to another page\n      // history.push('/all'); \n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        mt: 8,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Booking Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"lectureName\",\n          label: \"Lecture Name\",\n          value: lectureName,\n          InputProps: {\n            readOnly: true\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"department-label\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"department-label\",\n            id: \"department\",\n            value: department,\n            onChange: e => setDepartment(e.target.value),\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Biosystems Technology\",\n              children: \"Department of Biosystems Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Department of Information and Communication Technology\",\n              children: \"Department of Information and Communication Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Department of Civil and Environmental Technology\",\n              children: \"Department of Civil and Environmental Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Department of Materials and Mechanical Technology\",\n              children: \"Department of Materials and Mechanical Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Department of Science for Technology\",\n              children: \"Department of Science for Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: modules,\n          getOptionLabel: option => `${option.code} ${option.title}`,\n          onChange: handleModuleChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Module\",\n            variant: \"outlined\",\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          id: \"year\",\n          label: \"Year\",\n          value: year,\n          InputProps: {\n            readOnly: true\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            required: true,\n            margin: \"normal\",\n            id: \"date\",\n            label: \"Date\",\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"info\",\n            sx: {\n              ml: 2\n            },\n            onClick: handleTodayClick,\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            gap: 2,\n            marginTop: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            required: true,\n            margin: \"normal\",\n            id: \"startTime\",\n            label: \"Start Time\",\n            type: \"time\",\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            required: true,\n            margin: \"normal\",\n            id: \"endTime\",\n            label: \"End Time\",\n            type: \"time\",\n            value: endTime,\n            onChange: e => setEndTime(e.target.value),\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              mb: 1\n            },\n            children: \"Type of Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            value: sessionType,\n            onChange: e => {\n              setSessionType(e.target.value);\n              setRoom(''); // Reset room on session type change\n\n              setRoomFacilities({}); // Reset facilities\n            },\n            sx: {\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"lecture\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 58\n              }, this),\n              label: \"Lecture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"lab\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 54\n              }, this),\n              label: \"Lab Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), sessionType === 'lecture' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            required: true,\n            margin: \"normal\",\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: rooms,\n              getOptionLabel: option => option,\n              onChange: handleRoomChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Hall No\",\n                variant: \"outlined\",\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), sessionType === 'lab' && /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"labName\",\n            label: \"Lab Name\",\n            value: equipment,\n            onChange: e => setEquipment(e.target.value),\n            variant: \"outlined\",\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"CONFIRM BOOKING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openLoadingModal,\n      \"aria-labelledby\": \"loading-modal-title\",\n      \"aria-describedby\": \"loading-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 300,\n          bgcolor: 'background.paper',\n          borderRadius: '8px',\n          boxShadow: 24,\n          p: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"loading-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Checking The Availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"loading-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openResultModal,\n      onClose: handleCloseResultModal,\n      \"aria-labelledby\": \"result-modal-title\",\n      \"aria-describedby\": \"result-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          borderRadius: '8px',\n          boxShadow: 24,\n          p: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"result-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [resultMessage.includes(\"successfully\") ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            color: \"success\",\n            sx: {\n              fontSize: 40,\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Close, {\n            color: \"error\",\n            sx: {\n              fontSize: 40,\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"result-modal-description\",\n            sx: {\n              color: resultMessage.includes(\"successfully\") ? 'green' : 'red'\n            },\n            children: resultMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 3\n          },\n          onClick: handleCloseResultModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Booking, \"7/svcYi/qD+WqUyuwggDqvRa/dA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","MenuItem","Select","InputLabel","FormControl","Box","Typography","Container","Modal","Autocomplete","Radio","RadioGroup","FormControlLabel","CheckCircle","Close","modulesData","useHistory","Booking","history","lectureName","setLectureName","department","setDepartment","module","setModule","year","setYear","date","setDate","startTime","setStartTime","endTime","setEndTime","room","setRoom","equipment","setEquipment","sessionType","setSessionType","openLoadingModal","setOpenLoadingModal","openResultModal","setOpenResultModal","resultMessage","setResultMessage","modules","setModules","rooms","setRooms","roomFacilities","setRoomFacilities","fetchLecturerName","email","localStorage","getItem","response","fetch","lecturers","json","lecturer","find","name","error","console","roomData","map","entry","Object","values","handleModuleChange","event","newValue","handleTodayClick","today","Date","toISOString","split","handleRoomChange","selectedRoom","hallNo","facilities","handleSubmit","preventDefault","alert","bookedEmail","setTimeout","bookings","conflictingBooking","booking","location","newBooking","id","Math","random","toString","substr","code","title","saveResponse","method","headers","body","JSON","stringify","ok","handleCloseResultModal","includes","display","flexDirection","alignItems","mt","width","readOnly","e","target","value","option","params","marginTop","shrink","ml","justifyContent","gap","mb","position","top","left","transform","bgcolor","borderRadius","boxShadow","p","textAlign","fontSize","color"],"sources":["C:/Users/DELL/Documents/Reserve-Master/src/components/booking/Booking.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl, Box, Typography, Container, Modal, Autocomplete, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport CheckCircle from '@mui/icons-material/CheckCircle';\nimport Close from '@mui/icons-material/Close';\nimport modulesData from './modules.json';\nimport { useHistory } from 'react-router-dom'; // Use useHistory\n\nconst Booking = () => {\n  const history = useHistory(); // Initialize useHistory\n  const [lectureName, setLectureName] = useState('');\n  const [department, setDepartment] = useState('');\n  const [module, setModule] = useState(null);\n  const [year, setYear] = useState('');\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [room, setRoom] = useState('');\n  const [equipment, setEquipment] = useState('');\n  const [sessionType, setSessionType] = useState('lecture');\n  const [openLoadingModal, setOpenLoadingModal] = useState(false);\n  const [openResultModal, setOpenResultModal] = useState(false);\n  const [resultMessage, setResultMessage] = useState('');\n  const [modules, setModules] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [roomFacilities, setRoomFacilities] = useState({}); // State for room facilities\n\n  useEffect(() => {\n    const fetchLecturerName = async () => {\n      const email = localStorage.getItem('userEmail');\n      if (email) {\n        try {\n          const response = await fetch('http://localhost:5000/Lectures');\n          const lecturers = await response.json();\n          const lecturer = lecturers.find(lecturer => lecturer.email === email);\n          if (lecturer) {\n            setLectureName(lecturer.name);\n            setDepartment(lecturer.department || '');\n          }\n        } catch (error) {\n          console.error('Error fetching lecturers:', error);\n        }\n      }\n    };\n\n    fetchLecturerName();\n  }, []);\n\n  useEffect(() => {\n    if (department) {\n      setModules(modulesData[department] || []);\n      setModule(null);\n      setYear('');\n\n      const roomData = modulesData[\"Lecture Halls\"].map(entry => Object.values(entry)[0]);\n      setRooms(roomData);\n    }\n  }, [department]);\n\n  const handleModuleChange = (event, newValue) => {\n    setModule(newValue);\n    if (newValue) {\n      setYear(newValue.year);\n    } else {\n      setYear('');\n    }\n  };\n\n  const handleTodayClick = () => {\n    const today = new Date().toISOString().split('T')[0];\n    setDate(today);\n  };\n\n  const handleRoomChange = (event, newValue) => {\n    setRoom(newValue);\n    if (newValue) {\n      const selectedRoom = modulesData[\"Lecture Halls\"].find(entry => entry.hallNo === newValue);\n      if (selectedRoom) {\n        setRoomFacilities(selectedRoom.facilities); // Set facilities based on selected room\n      }\n    } else {\n      setRoomFacilities({}); // Reset if no room is selected\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!lectureName || !department || !module || !year || !date || !startTime || !endTime || (sessionType === 'lecture' && !room) || (sessionType === 'lab' && !equipment)) {\n      alert(\"Please fill out all required fields.\");\n      return;\n    }\n\n    const bookedEmail = localStorage.getItem('userEmail');\n\n    setOpenLoadingModal(true);\n\n    setTimeout(async () => {\n      try {\n        const response = await fetch('http://localhost:5000/Booking');\n        const bookings = await response.json();\n\n        const conflictingBooking = bookings.find(booking =>\n          booking.location === room &&\n          booking.date === date &&\n          ((startTime >= booking.startTime && startTime < booking.endTime) ||\n            (endTime > booking.startTime && endTime <= booking.endTime))\n        );\n\n        if (conflictingBooking) {\n          setResultMessage(`Sorry! This hall is already booked for this time until ${conflictingBooking.endTime}.`);\n        } else {\n          const newBooking = {\n            id: Math.random().toString(36).substr(2, 9),\n            lectureName,\n            department,\n            module: `${module.code} ${module.title}`, // Save full module name\n            year,\n            date,\n            startTime,\n            endTime,\n            \"Type of booking\": sessionType,\n            location: sessionType === 'lecture' ? room : equipment,\n            bookedEmail\n          };\n\n          const saveResponse = await fetch('http://localhost:5000/Booking', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newBooking),\n          });\n\n          if (saveResponse.ok) {\n            setResultMessage(\"This hall is booked successfully.\");\n          } else {\n            setResultMessage('Failed to save booking. Please try again.');\n          }\n        }\n      } catch (error) {\n        console.error('Error submitting booking:', error);\n        setResultMessage('An error occurred while submitting the booking. Please try again.');\n      } finally {\n        setOpenLoadingModal(false);\n        setOpenResultModal(true);\n      }\n    }, 3000);\n  };\n\n  const handleCloseResultModal = () => {\n    setOpenResultModal(false);\n    if (resultMessage.includes(\"successfully\")) {\n      // Optionally navigate to another page\n      // history.push('/all'); \n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 8, width: '100%' }}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Booking Form\n        </Typography>\n\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1, width: '100%' }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"lectureName\"\n            label=\"Lecture Name\"\n            value={lectureName}\n            InputProps={{\n              readOnly: true,\n            }}\n            variant=\"outlined\"\n          />\n\n          <FormControl fullWidth required margin=\"normal\">\n            <InputLabel id=\"department-label\">Department</InputLabel>\n            <Select\n              labelId=\"department-label\"\n              id=\"department\"\n              value={department}\n              onChange={(e) => setDepartment(e.target.value)}\n              variant=\"outlined\"\n            >\n              <MenuItem value=\"Biosystems Technology\">Department of Biosystems Technology</MenuItem>\n              <MenuItem value=\"Department of Information and Communication Technology\">Department of Information and Communication Technology</MenuItem>\n              <MenuItem value=\"Department of Civil and Environmental Technology\">Department of Civil and Environmental Technology</MenuItem>\n              <MenuItem value=\"Department of Materials and Mechanical Technology\">Department of Materials and Mechanical Technology</MenuItem>\n              <MenuItem value=\"Department of Science for Technology\">Department of Science for Technology</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Autocomplete\n            options={modules}\n            getOptionLabel={(option) => `${option.code} ${option.title}`}\n            onChange={handleModuleChange}\n            renderInput={(params) => (\n              <TextField \n                {...params} \n                label=\"Module\" \n                variant=\"outlined\"\n                fullWidth\n                required\n              />\n            )}\n          />\n\n          <TextField\n            fullWidth\n            required\n            margin=\"normal\"\n            id=\"year\"\n            label=\"Year\"\n            value={year}\n            InputProps={{\n              readOnly: true,\n            }}\n            variant=\"outlined\"\n          />\n\n          <Box sx={{ display: 'flex', alignItems: 'center', marginTop: 1 }}>\n            <TextField\n              fullWidth\n              required\n              margin=\"normal\"\n              id=\"date\"\n              label=\"Date\"\n              type=\"date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <Button variant=\"contained\" color=\"info\" sx={{ ml: 2 }} onClick={handleTodayClick}>\n              Today\n            </Button>\n          </Box>\n\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: 2, marginTop: 1 }}>\n            <TextField\n              fullWidth\n              required\n              margin=\"normal\"\n              id=\"startTime\"\n              label=\"Start Time\"\n              type=\"time\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              fullWidth\n              required\n              margin=\"normal\"\n              id=\"endTime\"\n              label=\"End Time\"\n              type=\"time\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Box>\n\n          <FormControl component=\"fieldset\" margin=\"normal\">\n            <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n              Type of Booking\n            </Typography>\n            <RadioGroup \n              row \n              value={sessionType} \n              onChange={(e) => {\n                setSessionType(e.target.value);\n                setRoom(''); // Reset room on session type change\n                setRoomFacilities({}); // Reset facilities\n              }}\n              sx={{ display: 'flex', justifyContent: 'center' }}\n            >\n              <FormControlLabel value=\"lecture\" control={<Radio size=\"medium\" />} label=\"Lecture\" />\n              <FormControlLabel value=\"lab\" control={<Radio size=\"medium\" />} label=\"Lab Session\" />\n            </RadioGroup>\n          </FormControl>\n\n          {sessionType === 'lecture' && (\n            <>\n              <FormControl fullWidth required margin=\"normal\">\n                <Autocomplete\n                  options={rooms}\n                  getOptionLabel={(option) => option}\n                  onChange={handleRoomChange}\n                  renderInput={(params) => (\n                    <TextField \n                      {...params} \n                      label=\"Hall No\" \n                      variant=\"outlined\" \n                      fullWidth \n                      required \n                    />\n                  )}\n                />\n              </FormControl>\n              {/* Optionally display facilities */}\n            </>\n          )}\n\n          {sessionType === 'lab' && (\n            <FormControl fullWidth required margin=\"normal\">\n              <TextField\n                id=\"labName\"\n                label=\"Lab Name\"\n                value={equipment}\n                onChange={(e) => setEquipment(e.target.value)}\n                variant=\"outlined\"\n                fullWidth\n                required\n              />\n            </FormControl>\n          )}\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            CONFIRM BOOKING\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Loading Modal */}\n      <Modal\n        open={openLoadingModal}\n        aria-labelledby=\"loading-modal-title\"\n        aria-describedby=\"loading-modal-description\"\n      >\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 300,\n            bgcolor: 'background.paper',\n            borderRadius: '8px',\n            boxShadow: 24,\n            p: 4,\n            textAlign: 'center'\n          }}\n        >\n          <Typography id=\"loading-modal-title\" variant=\"h6\" component=\"h2\">\n            Checking The Availability\n          </Typography>\n          <Typography id=\"loading-modal-description\" sx={{ mt: 2 }}>\n            Please wait...\n          </Typography>\n        </Box>\n      </Modal>\n\n      {/* Result Modal */}\n      <Modal\n        open={openResultModal}\n        onClose={handleCloseResultModal}\n        aria-labelledby=\"result-modal-title\"\n        aria-describedby=\"result-modal-description\"\n      >\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 400,\n            bgcolor: 'background.paper',\n            borderRadius: '8px',\n            boxShadow: 24,\n            p: 4,\n            textAlign: 'center'\n          }}\n        >\n          <Typography id=\"result-modal-title\" variant=\"h6\" component=\"h2\">\n            {room}\n          </Typography>\n          <Box sx={{ mt: 2, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            {resultMessage.includes(\"successfully\") ? (\n              <CheckCircle color=\"success\" sx={{ fontSize: 40, mb: 1 }} />\n            ) : (\n              <Close color=\"error\" sx={{ fontSize: 40, mb: 1 }} />\n            )}\n            <Typography id=\"result-modal-description\" sx={{ color: resultMessage.includes(\"successfully\") ? 'green' : 'red' }}>\n              {resultMessage}\n            </Typography>\n          </Box>\n          <Button variant=\"contained\" sx={{ mt: 3 }} onClick={handleCloseResultModal}>\n            Close\n          </Button>\n        </Box>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Booking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}