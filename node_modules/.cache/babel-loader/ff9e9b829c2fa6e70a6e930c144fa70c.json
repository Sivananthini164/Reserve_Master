{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Reserve-Master\\\\src\\\\components\\\\login\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, Container } from '@mui/material';\nimport { useHistory } from 'react-router-dom'; // Import useHistory for navigation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory(); // Initialize useHistory\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // State for error messages\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      // Fetch users from the server\n      const response = await fetch('http://localhost:5000/Lectures');\n      const lectures = await response.json(); // Fetch students from the server\n\n      const responseStudents = await fetch('http://localhost:5000/Students');\n      const students = await responseStudents.json(); // Check for valid user (students and lecturers)\n\n      const validUser = [...lectures, ...students].find(user => user.email === email && user.password === password);\n\n      if (validUser) {\n        // Navigate to /today on successful login\n        alert('Login successful!');\n        localStorage.setItem('userEmail', validUser.email); // alert(`Email saved: ${validUser.email}`);\n        // Pass user email to /today\n\n        history.push({\n          pathname: '/today',\n          state: {\n            userEmail: validUser.email\n          } // Pass the email to the next page\n\n        });\n      } else {\n        // Handle incorrect login\n        setError('Invalid email or password');\n      }\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError('Could not connect to the server. Please try again later.');\n    }\n\n    console.log('Email:', email);\n    console.log('Password:', password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"red\",\n          sx: {\n            mt: 2,\n            width: '100%',\n            textAlign: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"v9rGdWGHgaBYu5+Z/uJjvF+3xR8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","Container","useHistory","Login","history","email","setEmail","password","setPassword","error","setError","handleSubmit","event","preventDefault","response","fetch","lectures","json","responseStudents","students","validUser","find","user","alert","localStorage","setItem","push","pathname","state","userEmail","err","console","log","display","flexDirection","alignItems","mt","width","e","target","value","textAlign","mb"],"sources":["C:/Users/DELL/Documents/Reserve-Master/src/components/login/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, Container } from '@mui/material';\nimport { useHistory } from 'react-router-dom'; // Import useHistory for navigation\n\nconst Login = () => {\n  const history = useHistory(); // Initialize useHistory\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // State for error messages\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // Fetch users from the server\n      const response = await fetch('http://localhost:5000/Lectures');\n      const lectures = await response.json();\n\n      // Fetch students from the server\n      const responseStudents = await fetch('http://localhost:5000/Students');\n      const students = await responseStudents.json();\n\n      // Check for valid user (students and lecturers)\n      const validUser = [...lectures, ...students].find(user => user.email === email && user.password === password);\n\n      if (validUser) {\n        // Navigate to /today on successful login\n        alert('Login successful!');\n        localStorage.setItem('userEmail', validUser.email);\n        // alert(`Email saved: ${validUser.email}`);\n\n        // Pass user email to /today\n        history.push({\n          pathname: '/today',\n          state: { userEmail: validUser.email }, // Pass the email to the next page\n        });\n      } else {\n        // Handle incorrect login\n        setError('Invalid email or password');\n      }\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError('Could not connect to the server. Please try again later.');\n    }\n\n    console.log('Email:', email);\n    console.log('Password:', password);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box \n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mt: 8\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n\n        {/* Form Start */}\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1, width: '100%' }}>\n          {/* Email Input */}\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          {/* Password Input */}\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          {/* Error message above the button */}\n          {error && (\n            <Typography color=\"red\" sx={{ mt: 2, width: '100%', textAlign: 'center' }}>\n              {error}\n            </Typography>\n          )}\n\n          {/* Submit Button */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Login\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}